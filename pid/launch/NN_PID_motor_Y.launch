<launch>
    <node name="pid_cv" pkg="pid" type="controller" output="screen" >
      <param name="Kp" value="0.7" />
      <param name="Ki" value="0.0" />
      <param name="Kd" value="0.014" />
      <param name="upper_limit" value="100" />
      <param name="lower_limit" value="-100" />
      <param name="windup_limit" value="40" />
      <param name="cutoff_frequency" value="5" />
      <param name="max_loop_frequency" value="28.0" />
      <param name="min_loop_frequency" value="20.0" />
      <param name="setpoint_timeout" value="-1.0" />
      <!--param name="topic_from_controller" value="control_effort" /-->
      <param name="topic_from_plant" value="state" />
     </node>

    <node name="cv" pkg="ros_control_example" type="cv_detection_PID.py" output="screen"/>

    <node name="serial_node" pkg="rosserial_python" type="serial_node.py" args="_port:=/dev/ttyACM0" />
    

    <!--node name="setpoint_node" pkg="pid" type="setpoint_node" output="screen" /-->

    <!-- rqt_plot is a resource hog, so if you're seeing high CPU usage, don't launch rqt_plot  -->
    <node name="rqt_plot" pkg="rqt_plot" type="rqt_plot"
    args="/control_effort/data /state/data /setpoint/data" />

    <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" />

    <node name="rqt_robot_monitor" pkg="rqt_robot_monitor" type="rqt_robot_monitor" />
</launch>
